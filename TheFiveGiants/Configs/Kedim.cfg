@Kopernicus
{
  Body
  {
    name = Kedim
    cache = TheFiveGiants/Cache/Kedim.bin
    contractWeight = 40
    Template
    {
      name = Jool
    }
    Properties
    {
      description = Kedim is a medium-sized gas giant smaller than Jool found beyond Eeloo.
      radius = 5000000
      geeASL = 0.75
			mass = 1.8E+24
			rotates = True
			rotationPeriod = 50000
			tidallyLocked = False
			initialRotation = 0
			albedo = 0.52
			emissivity = 0.48
			coreTemperatureOffset = 80
			timewarpAltitudeLimits = 0 0 15000 60000 150000 300000 600000 1200000
			sphereOfInfluence = 2000000000
			solarRotationPeriod = False
			displayName = Kedim^N
			selectable = True
			RnDVisibility = Visible
			RnDRotation = False
			maxZoom = 60000
			ScienceValues
			{
				landedDataValue = 50
				splashedDataValue = 50
				flyingLowDataValue = 20
				flyingHighDataValue = 14
				inSpaceLowDataValue = 9
				inSpaceHighDataValue = 5
				recoveryValue = 7
				flyingAltitudeThreshold = 120000
				spaceAltitudeThreshold = 4000000
			}
    }
    Orbit
		{
			referenceBody = Sun // The body that this body is orbiting around.
			inclination = 2.5 // The angle between the orbital plane and the ecliptic
			eccentricity = 0.09 // The deviation of the orbit from circularity
			semiMajorAxis = 75000000000 // One-half the length of a line segment drawn from periapsis to apoapsis
			longitudeOfAscendingNode = 52 // Where the orbit crosses the ecliptic moving south to north
			argumentOfPeriapsis = 0 // The angular distance between longitudeOfAscendingNode and periapsis
			meanAnomalyAtEpochD = 5.5 // The body's mean anomaly at the specified epoch, in degrees
			epoch = 0 // The number of elapsed seconds from UT = 00:00:00
			color = 0.55,0.35,0.15,0.5 // The color of the orbit line in the Tracking Station
			nodeColor = 0.55,0.35,0.15,0.5 // The color of the circle that marks the planets current position on the orbit
			mode = REDRAW_AND_RECALCULATE
			icon = ALL
			cameraSmaRatioBounds = 0.03 25
			period = 250000000 // Orbital period in seconds
		}
		ScaledVersion
		{
			type = Atmospheric
			fadeStart = 25000
			fadeEnd = 28000
			sphericalModel = False
			deferMesh = False
			invisible = False
			Material
      {
		    Gradient
        {
	        0.0 = 0.8,0.5,0.2,1
          0.6 = 0.5,0.2,0.05,1
          1.0 = 0.04,0.02,0.005,1
        }
      }
			OnDemand
			{
				texture = TheFiveGiants/PluginData/Kedim_color.dds
			}	
		}
		Atmosphere
		{
			enabled = True // Whether the body has an atmosphere
			oxygen = False // Whether the atmosphere contains oxygen
			staticDensityASL = 6.5 // Atmospheric density at sea level. Used to calculate the parameters of the atmosphere if no curves are used
			adiabaticIndex = 1.25 // A thermodynamic property of the gas, also known as heat capacity ratio
			atmosphereDepth = 200000 // The height of the atmosphere
			gasMassLapseRate = 2.07657256052129
			atmosphereMolarMass = 0.002 // The mass in kilograms of one mole of gas
			pressureCurveIsNormalized = False // Whether the pressure curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values
			shockTemperatureMultiplier = 0.45 // Multiplies the External/Shock Temperature by this value. This is relevant for aerodynamic heating
			staticPressureASL = 1450 // The static pressure at sea level. Used to calculate the parameters of the atmosphere if no curves are used
			temperatureCurveIsNormalized = False // Whether the temperature curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values
			temperatureLapseRate = 0.001
			temperatureSeaLevel = 200 // The static temperature at sea level. Used to calculate the parameters of the atmosphere if no curves are used
			ambientColor = 0.4,0.25,0.1,1 // All objects inside of the atmosphere will slightly shine in this color
			lightColor = 0.674509823,0.596078455,0.850980401,0 // Same as waveLength in AtmosphereFromGround
			addAFG = True
			pressureCurve // Assigns a pressure value to a height value inside of the atmosphere
			{
				key = 0 5066.25 0 -0.6723968
				key = 10000 1519.875 -0.1346587 -0.1346587
				key = 29000 628.0436 -0.01449255 -0.01449255
				key = 123450 22.26 -0.001562163 -0.001562163
				key = 150000 2 -0.0001361465 -0.0001361465
				key = 170000 0.1 -1.001277E-05 -1.001277E-05
				key = 200000 0 0 0
			}
			temperatureCurve // Assigns a base temperature value to a height value inside of the atmosphere
			{
				key = 0 200 0 -0.001182922
				key = 29000 165 -0.001207278 -0.001207278
				key = 123450 120 0 0
				key = 168000 160 0.0009967944 0.0009967944
				key = 187500 175 0 0
				key = 194000 167 0 0
				key = 200000 350 0.08717471 0
			}
			temperatureSunMultCurve // How the temperature modifiers vary by altitude, in the form of a multiplier
			{
				key = 0 0 0 0
				key = 29000 0.5 0 0
				key = 123450 0.8 0 0
				key = 200000 1.5 0 0
			}
			temperatureLatitudeBiasCurve // Latitudinal temperature modifier
			{
				key = 0 30 0 -0.0957164
				key = 50 10 -0.950278 -0.950278
				key = 70 -20 -1.955704 -1.955704
				key = 90 -40 -0.02418368 0
			}
			temperatureLatitudeSunMultCurve // Day - night temperature modifier by latitude
			{
				key = 0 9 0 0.02746098
				key = 40 12 0.2295445 0.2295445
				key = 65 18 0 0
				key = 90 5 0 0
			}
			temperatureAxialSunBiasCurve // Seasonal temperature modifier by true anomaly
			{
				key = 0 0 0 0
			}
			temperatureAxialSunMultCurve // How the seasonal temperature modifier varies by latitude
			{
				key = 0 0 0 0
			}
			temperatureEccentricityBiasCurve // Orbital eccentricity temperature modifier
			{
				key = 0 0 0 0
			}
			AtmosphereFromGround // The atmosphere effect that is seen on the horizon
			{
				DEBUG_alwaysUpdateAll = False // Whether all parameters should get recalculated and reapplied every frame.
				doScale = True // Whether the atmosphere mesh should be scaled automatically.
				innerRadius = 5996250 // The lower bound of the atmosphere effect.
				invWaveLength = 4.83110952,7.92111492,1.90687299,0.5
				outerRadius = 6150000 // The upper bound of the atmosphere effect.
				samples = 4
				transformScale = 1.02499998,1.02499998,1.02499998 // The scale of the atmosphere mesh in all three directions. Automatically set if doScale is enabled.
				waveLength = 0.674509823,0.596078455,0.850980401,0
				outerRadiusMult = 1.025 // A multiplier that automatically sets outerRadius based on the planets radius.
				innerRadiusMult = 0.975 // A multiplier that automatically sets innerRadius based on the planets radius.
			}
		}
  }
}
